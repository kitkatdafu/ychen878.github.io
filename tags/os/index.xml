<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OS on XIAOYIJ</title><link>https://www.mrr1vfe.io/tags/os/</link><description>Recent content in OS on XIAOYIJ</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Yi Chen</copyright><lastBuildDate>Thu, 30 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mrr1vfe.io/tags/os/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Operating Systems</title><link>https://www.mrr1vfe.io/posts/cs537/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.mrr1vfe.io/posts/cs537/</guid><description>Introduction 1 OS abstraction Provide standard library to access resource that is valuable such as CPU, memory, and monitor. OS providing abstraction has a variety of advantages. It allows applications to reuse common facilities; it makes different devices look the same; and it provides higher-level or more useful functionality. The challenges of OS providing abstraction are identifying the correct abstraction and deciding how much of hardware should be exposed.</description></item></channel></rss>