<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PL on Yi Chen</title><link>https://www.mrr1vfe.io/tags/pl/</link><description>Recent content in PL on Yi Chen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Yi Chen</copyright><lastBuildDate>Sat, 01 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mrr1vfe.io/tags/pl/index.xml" rel="self" type="application/rss+xml"/><item><title>Compiler and Context-free grammar</title><link>https://www.mrr1vfe.io/posts/contex-free-grammar/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.mrr1vfe.io/posts/contex-free-grammar/</guid><description>构造一个简单的编译器 目标 表达式中缀表示转化成后追表示
过程 字符流 -&amp;gt; 词法分析器 -&amp;gt; 单词流 -&amp;gt; 语法制导翻译器 -&amp;gt; 中间表示形式
语法制导翻译器 语法分析 + 中间代码生成
context-free grammar (CFG) context-free grammar For a language L, its CFG defines the sets of strings of symbols that are valid sentences in L.
sentence A string of symbols that can be derived from the rules of a grammar.</description></item><item><title>Theory and Design of Programming Languages</title><link>https://www.mrr1vfe.io/posts/cs538/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.mrr1vfe.io/posts/cs538/</guid><description>Lecture 1 1 Functional programming History Based on $\lambda$ calculus
Lisp
ML
Haskell
Building block function take inputs as arguments and produce outputs.
Functions are first class, like any other value. They can be passed to, returned by functions. Functions can also be combined into new function.</description></item></channel></rss>