<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Yi Chen</title>
    <link>https://ychen878.github.io/notes/</link>
    <description>Recent content in Notes on Yi Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ychen878.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LP Duality</title>
      <link>https://ychen878.github.io/notes/lp-duality/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ychen878.github.io/notes/lp-duality/</guid>
      <description>Estimating LP bounds Given an optimization problem $$ \begin{align} \max_{f, s} &amp;amp;\quad 12f + 9s \ \st &amp;amp;\quad 4f + 2s \leq 4800 \ &amp;amp;\quad f + s \leq 1750 \ &amp;amp;\quad 0 \leq f \leq 1000 \ &amp;amp;\quad 0 \leq s \leq 1500 \ \end{align} $$ Suppose the maximum profit is $p^\star$. How can we bound $p^\star$? The lower bound of $p^\star$ can be found by picking any feasible point (since maximization).</description>
    </item>
    
    <item>
      <title>RPC</title>
      <link>https://ychen878.github.io/notes/rpc/</link>
      <pubDate>Sat, 25 Feb 2023 22:51:15 -0600</pubDate>
      
      <guid>https://ychen878.github.io/notes/rpc/</guid>
      <description>Networks Network Interface Controllers (NICs) can connect a computer to different physical mediums, such as Ethernet and Wi-Fi. Every NIC in the world has a unique MAC (media access control) address. It consists of 48 bits. Therefore, there are 28 trillion possible MAC addresses. Some devices randomly change their MAC address for privacy.
You can use command ifconfig to check you network interface controller and its corresponding MAC address. There exists virtual interfaces as well.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://ychen878.github.io/notes/docker/</link>
      <pubDate>Sat, 25 Feb 2023 22:49:32 -0600</pubDate>
      
      <guid>https://ychen878.github.io/notes/docker/</guid>
      <description>Virtualization Virtualization is the illusion of private resources, provided by the software. We have virtual memory, virtual machine (hardware), virtual machine (languages), virtual operating system (container).
Each process using a virtual address space is not aware of other processes using memory (illusion of private memory). Virtualized resources include CPU, RAM, disks, network devices, etc. VMs rarely use all their allocated resources, so overbooking is possible. If each program is deployed to a different VM, operating system overheads dominate.</description>
    </item>
    
    <item>
      <title>Perceptron Learning Algorithm</title>
      <link>https://ychen878.github.io/notes/pla/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ychen878.github.io/notes/pla/</guid>
      <description>Given a dataset \(\mathcal{D} = \{(\vec{x}_1, y_1), \cdots, (\vec{x}_N, y_N)\}\) and a hypothesis set \(\mathcal{H}\), our learning algorithm \(\mathcal{A}\) tries to learn a function \(g \in \mathcal{H}\) that approximates the underlying, true function \(f: \mathcal{X} \to \mathcal{Y}\), which generates the points in \(\mathcal{D}\).
Credit Card Approve Problem Given a customer who is applying for a credit card, we want to build a system that determines if we should grant the application or not based on the customer&amp;#39;s information such as age, annual salary, year in job, etc.</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>https://ychen878.github.io/notes/clustering/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ychen878.github.io/notes/clustering/</guid>
      <description>In unsupervised learning, there are no labels associated with features. Generally speaking, the ultimate goal of unsupervised learning is to find patterns and structures that help us to better understand data. Sometimes, we also use unsupervised learning to model a distribution. But we generally will not make predictions.
There are 3 types of clustering 1. Partitional (centroid, graph-theoretic, spectral) 1. Hierarchical (agglomerative, divisive) 2. Bayesian (decision-based, non-parametric)
Partitional Clustering \(k\)-means \(k\)-means is a type of partitional centroid-based clustering algorithm.</description>
    </item>
    
    <item>
      <title>K-means in Python</title>
      <link>https://ychen878.github.io/notes/k-means/</link>
      <pubDate>Tue, 19 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ychen878.github.io/notes/k-means/</guid>
      <description>There are two major steps in the K-means algorithm. The first one is to calculate the representatives (centroids) of a given partition. The second one is to find the partition based on the representatives.
Inputs Suppose we have a dataset looks like this:
dataset = np.array([[5, 6], [6, 5], [0, 1], [1, 0], [3, 3]]) Each row in this dataset matrix is an observation and each column in this matrix represents a feature.</description>
    </item>
    
  </channel>
</rss>
